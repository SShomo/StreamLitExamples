{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "5buP3iBBsDt6",
        "outputId": "ce1e0877-4a17-4c05-9fb2-a42e1209bfcf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "<div id=\"altair-viz-641dab1043ef4cf3bb1ee14d5a782399\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-641dab1043ef4cf3bb1ee14d5a782399\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-641dab1043ef4cf3bb1ee14d5a782399\");\n",
              "    }\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm//vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm//vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm//vega-lite@4.17.0?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm//vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"4.17.0\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 400, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-244681c88f0cc5f90a0b1ae2d28b653d\"}, \"mark\": \"rect\", \"encoding\": {\"color\": {\"field\": \"z\", \"type\": \"quantitative\"}, \"tooltip\": {\"field\": \"z\", \"type\": \"quantitative\"}, \"x\": {\"field\": \"x\", \"type\": \"ordinal\"}, \"y\": {\"field\": \"y\", \"type\": \"ordinal\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v4.17.0.json\", \"datasets\": {\"data-244681c88f0cc5f90a0b1ae2d28b653d\": [{\"x\": 100, \"y\": 100, \"z\": 10000}, {\"x\": 5100, \"y\": 100, \"z\": 510000}, {\"x\": 10100, \"y\": 100, \"z\": 1010000}, {\"x\": 15100, \"y\": 100, \"z\": 1510000}, {\"x\": 20100, \"y\": 100, \"z\": 2010000}, {\"x\": 25100, \"y\": 100, \"z\": 2510000}, {\"x\": 30100, \"y\": 100, \"z\": 3010000}, {\"x\": 35100, \"y\": 100, \"z\": 3510000}, {\"x\": 40100, \"y\": 100, \"z\": 4010000}, {\"x\": 45100, \"y\": 100, \"z\": 4510000}, {\"x\": 50100, \"y\": 100, \"z\": 5010000}, {\"x\": 55100, \"y\": 100, \"z\": 5510000}, {\"x\": 60100, \"y\": 100, \"z\": 6010000}, {\"x\": 65100, \"y\": 100, \"z\": 6510000}, {\"x\": 70100, \"y\": 100, \"z\": 7010000}, {\"x\": 75100, \"y\": 100, \"z\": 7510000}, {\"x\": 80100, \"y\": 100, \"z\": 8010000}, {\"x\": 85100, \"y\": 100, \"z\": 8510000}, {\"x\": 90100, \"y\": 100, \"z\": 9010000}, {\"x\": 95100, \"y\": 100, \"z\": 9510000}, {\"x\": 100, \"y\": 90, \"z\": 9000}, {\"x\": 5100, \"y\": 90, \"z\": 459000}, {\"x\": 10100, \"y\": 90, \"z\": 909000}, {\"x\": 15100, \"y\": 90, \"z\": 1359000}, {\"x\": 20100, \"y\": 90, \"z\": 1809000}, {\"x\": 25100, \"y\": 90, \"z\": 2259000}, {\"x\": 30100, \"y\": 90, \"z\": 2709000}, {\"x\": 35100, \"y\": 90, \"z\": 3159000}, {\"x\": 40100, \"y\": 90, \"z\": 3609000}, {\"x\": 45100, \"y\": 90, \"z\": 4059000}, {\"x\": 50100, \"y\": 90, \"z\": 4509000}, {\"x\": 55100, \"y\": 90, \"z\": 4959000}, {\"x\": 60100, \"y\": 90, \"z\": 5409000}, {\"x\": 65100, \"y\": 90, \"z\": 5859000}, {\"x\": 70100, \"y\": 90, \"z\": 6309000}, {\"x\": 75100, \"y\": 90, \"z\": 6759000}, {\"x\": 80100, \"y\": 90, \"z\": 7209000}, {\"x\": 85100, \"y\": 90, \"z\": 7659000}, {\"x\": 90100, \"y\": 90, \"z\": 8109000}, {\"x\": 95100, \"y\": 90, \"z\": 8559000}, {\"x\": 100, \"y\": 80, \"z\": 8000}, {\"x\": 5100, \"y\": 80, \"z\": 408000}, {\"x\": 10100, \"y\": 80, \"z\": 808000}, {\"x\": 15100, \"y\": 80, \"z\": 1208000}, {\"x\": 20100, \"y\": 80, \"z\": 1608000}, {\"x\": 25100, \"y\": 80, \"z\": 2008000}, {\"x\": 30100, \"y\": 80, \"z\": 2408000}, {\"x\": 35100, \"y\": 80, \"z\": 2808000}, {\"x\": 40100, \"y\": 80, \"z\": 3208000}, {\"x\": 45100, \"y\": 80, \"z\": 3608000}, {\"x\": 50100, \"y\": 80, \"z\": 4008000}, {\"x\": 55100, \"y\": 80, \"z\": 4408000}, {\"x\": 60100, \"y\": 80, \"z\": 4808000}, {\"x\": 65100, \"y\": 80, \"z\": 5208000}, {\"x\": 70100, \"y\": 80, \"z\": 5608000}, {\"x\": 75100, \"y\": 80, \"z\": 6008000}, {\"x\": 80100, \"y\": 80, \"z\": 6408000}, {\"x\": 85100, \"y\": 80, \"z\": 6808000}, {\"x\": 90100, \"y\": 80, \"z\": 7208000}, {\"x\": 95100, \"y\": 80, \"z\": 7608000}, {\"x\": 100, \"y\": 70, \"z\": 7000}, {\"x\": 5100, \"y\": 70, \"z\": 357000}, {\"x\": 10100, \"y\": 70, \"z\": 707000}, {\"x\": 15100, \"y\": 70, \"z\": 1057000}, {\"x\": 20100, \"y\": 70, \"z\": 1407000}, {\"x\": 25100, \"y\": 70, \"z\": 1757000}, {\"x\": 30100, \"y\": 70, \"z\": 2107000}, {\"x\": 35100, \"y\": 70, \"z\": 2457000}, {\"x\": 40100, \"y\": 70, \"z\": 2807000}, {\"x\": 45100, \"y\": 70, \"z\": 3157000}, {\"x\": 50100, \"y\": 70, \"z\": 3507000}, {\"x\": 55100, \"y\": 70, \"z\": 3857000}, {\"x\": 60100, \"y\": 70, \"z\": 4207000}, {\"x\": 65100, \"y\": 70, \"z\": 4557000}, {\"x\": 70100, \"y\": 70, \"z\": 4907000}, {\"x\": 75100, \"y\": 70, \"z\": 5257000}, {\"x\": 80100, \"y\": 70, \"z\": 5607000}, {\"x\": 85100, \"y\": 70, \"z\": 5957000}, {\"x\": 90100, \"y\": 70, \"z\": 6307000}, {\"x\": 95100, \"y\": 70, \"z\": 6657000}, {\"x\": 100, \"y\": 60, \"z\": 6000}, {\"x\": 5100, \"y\": 60, \"z\": 306000}, {\"x\": 10100, \"y\": 60, \"z\": 606000}, {\"x\": 15100, \"y\": 60, \"z\": 906000}, {\"x\": 20100, \"y\": 60, \"z\": 1206000}, {\"x\": 25100, \"y\": 60, \"z\": 1506000}, {\"x\": 30100, \"y\": 60, \"z\": 1806000}, {\"x\": 35100, \"y\": 60, \"z\": 2106000}, {\"x\": 40100, \"y\": 60, \"z\": 2406000}, {\"x\": 45100, \"y\": 60, \"z\": 2706000}, {\"x\": 50100, \"y\": 60, \"z\": 3006000}, {\"x\": 55100, \"y\": 60, \"z\": 3306000}, {\"x\": 60100, \"y\": 60, \"z\": 3606000}, {\"x\": 65100, \"y\": 60, \"z\": 3906000}, {\"x\": 70100, \"y\": 60, \"z\": 4206000}, {\"x\": 75100, \"y\": 60, \"z\": 4506000}, {\"x\": 80100, \"y\": 60, \"z\": 4806000}, {\"x\": 85100, \"y\": 60, \"z\": 5106000}, {\"x\": 90100, \"y\": 60, \"z\": 5406000}, {\"x\": 95100, \"y\": 60, \"z\": 5706000}, {\"x\": 100, \"y\": 50, \"z\": 5000}, {\"x\": 5100, \"y\": 50, \"z\": 255000}, {\"x\": 10100, \"y\": 50, \"z\": 505000}, {\"x\": 15100, \"y\": 50, \"z\": 755000}, {\"x\": 20100, \"y\": 50, \"z\": 1005000}, {\"x\": 25100, \"y\": 50, \"z\": 1255000}, {\"x\": 30100, \"y\": 50, \"z\": 1505000}, {\"x\": 35100, \"y\": 50, \"z\": 1755000}, {\"x\": 40100, \"y\": 50, \"z\": 2005000}, {\"x\": 45100, \"y\": 50, \"z\": 2255000}, {\"x\": 50100, \"y\": 50, \"z\": 2505000}, {\"x\": 55100, \"y\": 50, \"z\": 2755000}, {\"x\": 60100, \"y\": 50, \"z\": 3005000}, {\"x\": 65100, \"y\": 50, \"z\": 3255000}, {\"x\": 70100, \"y\": 50, \"z\": 3505000}, {\"x\": 75100, \"y\": 50, \"z\": 3755000}, {\"x\": 80100, \"y\": 50, \"z\": 4005000}, {\"x\": 85100, \"y\": 50, \"z\": 4255000}, {\"x\": 90100, \"y\": 50, \"z\": 4505000}, {\"x\": 95100, \"y\": 50, \"z\": 4755000}, {\"x\": 100, \"y\": 40, \"z\": 4000}, {\"x\": 5100, \"y\": 40, \"z\": 204000}, {\"x\": 10100, \"y\": 40, \"z\": 404000}, {\"x\": 15100, \"y\": 40, \"z\": 604000}, {\"x\": 20100, \"y\": 40, \"z\": 804000}, {\"x\": 25100, \"y\": 40, \"z\": 1004000}, {\"x\": 30100, \"y\": 40, \"z\": 1204000}, {\"x\": 35100, \"y\": 40, \"z\": 1404000}, {\"x\": 40100, \"y\": 40, \"z\": 1604000}, {\"x\": 45100, \"y\": 40, \"z\": 1804000}, {\"x\": 50100, \"y\": 40, \"z\": 2004000}, {\"x\": 55100, \"y\": 40, \"z\": 2204000}, {\"x\": 60100, \"y\": 40, \"z\": 2404000}, {\"x\": 65100, \"y\": 40, \"z\": 2604000}, {\"x\": 70100, \"y\": 40, \"z\": 2804000}, {\"x\": 75100, \"y\": 40, \"z\": 3004000}, {\"x\": 80100, \"y\": 40, \"z\": 3204000}, {\"x\": 85100, \"y\": 40, \"z\": 3404000}, {\"x\": 90100, \"y\": 40, \"z\": 3604000}, {\"x\": 95100, \"y\": 40, \"z\": 3804000}, {\"x\": 100, \"y\": 30, \"z\": 3000}, {\"x\": 5100, \"y\": 30, \"z\": 153000}, {\"x\": 10100, \"y\": 30, \"z\": 303000}, {\"x\": 15100, \"y\": 30, \"z\": 453000}, {\"x\": 20100, \"y\": 30, \"z\": 603000}, {\"x\": 25100, \"y\": 30, \"z\": 753000}, {\"x\": 30100, \"y\": 30, \"z\": 903000}, {\"x\": 35100, \"y\": 30, \"z\": 1053000}, {\"x\": 40100, \"y\": 30, \"z\": 1203000}, {\"x\": 45100, \"y\": 30, \"z\": 1353000}, {\"x\": 50100, \"y\": 30, \"z\": 1503000}, {\"x\": 55100, \"y\": 30, \"z\": 1653000}, {\"x\": 60100, \"y\": 30, \"z\": 1803000}, {\"x\": 65100, \"y\": 30, \"z\": 1953000}, {\"x\": 70100, \"y\": 30, \"z\": 2103000}, {\"x\": 75100, \"y\": 30, \"z\": 2253000}, {\"x\": 80100, \"y\": 30, \"z\": 2403000}, {\"x\": 85100, \"y\": 30, \"z\": 2553000}, {\"x\": 90100, \"y\": 30, \"z\": 2703000}, {\"x\": 95100, \"y\": 30, \"z\": 2853000}, {\"x\": 100, \"y\": 20, \"z\": 2000}, {\"x\": 5100, \"y\": 20, \"z\": 102000}, {\"x\": 10100, \"y\": 20, \"z\": 202000}, {\"x\": 15100, \"y\": 20, \"z\": 302000}, {\"x\": 20100, \"y\": 20, \"z\": 402000}, {\"x\": 25100, \"y\": 20, \"z\": 502000}, {\"x\": 30100, \"y\": 20, \"z\": 602000}, {\"x\": 35100, \"y\": 20, \"z\": 702000}, {\"x\": 40100, \"y\": 20, \"z\": 802000}, {\"x\": 45100, \"y\": 20, \"z\": 902000}, {\"x\": 50100, \"y\": 20, \"z\": 1002000}, {\"x\": 55100, \"y\": 20, \"z\": 1102000}, {\"x\": 60100, \"y\": 20, \"z\": 1202000}, {\"x\": 65100, \"y\": 20, \"z\": 1302000}, {\"x\": 70100, \"y\": 20, \"z\": 1402000}, {\"x\": 75100, \"y\": 20, \"z\": 1502000}, {\"x\": 80100, \"y\": 20, \"z\": 1602000}, {\"x\": 85100, \"y\": 20, \"z\": 1702000}, {\"x\": 90100, \"y\": 20, \"z\": 1802000}, {\"x\": 95100, \"y\": 20, \"z\": 1902000}, {\"x\": 100, \"y\": 10, \"z\": 1000}, {\"x\": 5100, \"y\": 10, \"z\": 51000}, {\"x\": 10100, \"y\": 10, \"z\": 101000}, {\"x\": 15100, \"y\": 10, \"z\": 151000}, {\"x\": 20100, \"y\": 10, \"z\": 201000}, {\"x\": 25100, \"y\": 10, \"z\": 251000}, {\"x\": 30100, \"y\": 10, \"z\": 301000}, {\"x\": 35100, \"y\": 10, \"z\": 351000}, {\"x\": 40100, \"y\": 10, \"z\": 401000}, {\"x\": 45100, \"y\": 10, \"z\": 451000}, {\"x\": 50100, \"y\": 10, \"z\": 501000}, {\"x\": 55100, \"y\": 10, \"z\": 551000}, {\"x\": 60100, \"y\": 10, \"z\": 601000}, {\"x\": 65100, \"y\": 10, \"z\": 651000}, {\"x\": 70100, \"y\": 10, \"z\": 701000}, {\"x\": 75100, \"y\": 10, \"z\": 751000}, {\"x\": 80100, \"y\": 10, \"z\": 801000}, {\"x\": 85100, \"y\": 10, \"z\": 851000}, {\"x\": 90100, \"y\": 10, \"z\": 901000}, {\"x\": 95100, \"y\": 10, \"z\": 951000}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import altair as alt\n",
        "import streamlit as st\n",
        "\n",
        "Low = 100\n",
        "High = 100000\n",
        "\n",
        "# Compute x^2 + y^2 across a 2D grid\n",
        "x, y = np.meshgrid(range(Low, High, 5000), range(100, 0, -10))\n",
        "z = x * y\n",
        "\n",
        "# Convert this grid to columnar data expected by Altair\n",
        "model = pd.DataFrame({'x': x.ravel(),\n",
        "                     'y': y.ravel(),\n",
        "                     'z': z.ravel()})\n",
        "\n",
        "alt.Chart(model).mark_rect().encode(\n",
        "    x='x:O',\n",
        "    y='y:O',\n",
        "    color='z:Q',\n",
        "    tooltip='z:Q'\n",
        ")\n",
        "\n",
        "st.altair_chart(Chart, use_container_width=True)"
      ]
    }
  ]
}